{"mappings":"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","sources":["2025/0318/main.js","2025/0318/LifeFeedBackPage.js","2025/0318/LifeUserTable.js","2025/0318/ToastDiv.js"],"sourcesContent":["import { LifeFeedBackPage } from './LifeFeedBackPage.js'\r\nimport LifeUserTable from './LifeUserTable.js'\r\n\r\n(() => {\r\n\r\n    const CSS_SNIPPET = `\r\n      /* root */\r\n      html,body{\r\n          /* 最後までスクロールできない問題を解決 */\r\n          height: auto !important;\r\n          max-height: none !important;\r\n          overflow: visible !important;\r\n      }\r\n      /* header */\r\n      .header-page{\r\n          /* 最上部のナビゲーションをスクロールに追随させない */\r\n          position: static !important;\r\n      }\r\n      /* rapper layouted */\r\n      .app-component[_ngcontent-ng-c2883769184]{\r\n          display: block !important;\r\n      }\r\n      .main-component{\r\n          grid-area: none !important;\r\n          margin-top: 0px !important;\r\n      }  \r\n      /* コンテナボックス */\r\n      .content-area{\r\n          display: grid;\r\n          grid-template-columns: 250px 1fr; /* 左300px右可変に分割 */\r\n      }\r\n      /* ルートdiv */\r\n      .feedback{\r\n          margin-top: 0px;\r\n          margin-left: 0px !important;\r\n          width: auto !important;\r\n          grid-column: 2;\r\n      }\r\n      /******************/\r\n      /* 利用者IDテーブル */\r\n      /* このスタイルはLifeUserTable#replaceCaptionの責務に移行しました */\r\n      /******************/\r\n\r\n      `\r\n\r\n    function insertAdjacentCSS(snippet) {\r\n        const style = document.createElement('style');\r\n        style.textContent = snippet;\r\n        document.documentElement.appendChild(style);\r\n    }\r\n\r\n    function waitForRequiredElement(callback) {\r\n\r\n        // ロードを待つ必要のある要素のセレクター\r\n        const targetSelector = 'table[role=\"table\"]'\r\n\r\n        // すでにロードされていればコールバックを実行して抜ける\r\n        const element = document.querySelector(targetSelector);\r\n        if (element) {\r\n            callback();\r\n            return;\r\n        }\r\n        // MutationObserver定義\r\n        const observer = new MutationObserver(() => {\r\n            const element = document.querySelector(targetSelector);\r\n            if (element) {\r\n                observer.disconnect();\r\n                callback();\r\n            }\r\n        });\r\n        // 監視を開始\r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n\r\n    function main() {\r\n        insertAdjacentCSS(CSS_SNIPPET);\r\n\r\n        const life = new LifeFeedBackPage();\r\n        const userTable = new LifeUserTable(life);\r\n        userTable.replaceCaption();\r\n\r\n        const feedbackRoot = document.querySelector('tableau-viz').shadowRoot;\r\n\r\n        //consoleデバッグ用\r\n        window.life = life;\r\n        window.userTable = userTable;\r\n\r\n    }\r\n\r\n    waitForRequiredElement(main);\r\n\r\n})();\r\n","const FEEDBACK_N_SERVICE = Object.freeze({\r\n\t'科学的介護推進体制加算': Object.freeze(['52', '16', '66']),\r\n\t'栄養マネジメント強化加算・栄養アセスメント加算': Object.freeze(['52']),\r\n\t'口腔衛生管理加算': Object.freeze(['52']),\r\n\t'口腔機能向上加算': Object.freeze(['16', '66']),\r\n\t'個別機能訓練加算': Object.freeze([]), // 老健対象外\r\n\t'リハビリテーションマネジメント加算等': Object.freeze(['52', '16', '66', '14', '64']),\r\n\t'短期集中リハビリテーション実施加算': Object.freeze(['52']),\r\n\t'褥瘡マネジメント加算': Object.freeze(['52']),\r\n\t'排せつ支援加算': Object.freeze(['52']),\r\n\t'自立支援促進加算': Object.freeze(['52']),\r\n\t'ADL維持等加算': Object.freeze([]), // 老健対象外\r\n\t'個別機能・栄養・口腔': Object.freeze([]),\r\n\t'リハビリテーション・栄養・口腔': Object.freeze(['52', '16', '66', '14', '64'])\r\n});\r\n\r\nconst SERVICE_N_LABEL = Object.freeze({\r\n\t\"52\": \"介護保健施設サービス\", //介護保「健」のtypoがあるので、将来の訂正に注意！！\r\n\t\"16\": \"通所リハ\",\r\n\t\"66\": \"介護予防通所リハ\",\r\n\t\"14\": \"訪問リハ\",\r\n\t\"64\": \"介護予防訪問リハ\"\r\n});\r\n\r\n/**\r\n * tableau-viz 以下を操作するビジネスロジックを担当するモデル\r\n */\r\nclass LifeFeedBackPage extends EventTarget {\r\n\t/**\r\n\t * https://life-web.mhlw.go.jp/* でのみ初期化可能\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst url = new URL(document.URL);\r\n\t\tif (url.hostname !== 'life-web.mhlw.go.jp') {\r\n\t\t\tthrow new LifeError(`life-web.mhlw.go.jp 以外では初期化できません：${url.href}`, url);\r\n\t\t}\r\n\t\tthis.ownerDocument = document;\r\n\t\tthis.observeSrc(() => { // ページ遷移が起こったら……\r\n\t\t\tthis.adjustStyle(); // スタイル調整\r\n\t\t\tthis.#comboBoxes = null; // コンボボックスのキャッシュをクリア\r\n\t\t\t// イベントを発行。コントローラー側でこのクラスのインスタンスにaddEventListenerすること\r\n\t\t\tthis.dispatchEvent(new Event('src-loaded'));\r\n\t\t});\r\n\t}\r\n\r\n\t#STYLE_ELEMENT_ID = 'LifeFeedbackPage-style-2025-03-18';\r\n\r\n\t#intervalId = null; // this.observeSrcでコンテンツの遷移を監視するsetIntervalのID\r\n\r\n\t#comboBoxes = null; // サービス選択/ID選択用コンボボックスのキャッシュ\r\n\r\n\t/**\r\n\t * tableau-viz > #shadow-root > iframe > #document\r\n\t * @return {Document} - フィードバックページ本体のDocument\r\n\t */\r\n\tget doc() {\r\n\t\tconst shadowDoc = this.iframe?.contentDocument;\r\n\t\tif (!shadowDoc) {\r\n\t\t\tthrow new LifeError(`シャドウDOMに到達できません`, this.ownerDocument);\r\n\t\t}\r\n\t\treturn shadowDoc;\r\n\t}\r\n\r\n\tget iframe() {\r\n\t\treturn this.ownerDocument.querySelector('tableau-viz')\r\n\t\t\t?.shadowRoot.querySelector('iframe');\r\n\t}\r\n\r\n\t/**\r\n\t * @return {HTMLStyleElement} - 追加したstyle要素\r\n\t */\r\n\tget style() { // 追加されたスタイル要素を取得\r\n\t\tconst doc = this.doc;\r\n\t\tlet style = doc.getElementById(this.#STYLE_ELEMENT_ID);\r\n\t\tif (!style)\r\n\t\t\tstyle = this.adjustStyle();\r\n\t\treturn style;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {object} - {services: <LifeComboBox>, users: <LifeComboBox>}\r\n\t */\r\n\tget comboBoxes() {\r\n\t\tif (this.#comboBoxes)\r\n\t\t\treturn this.#comboBoxes;\r\n\r\n\t\tlet comboBoxes = this.doc.querySelectorAll('span[role=\"combobox\"]');\r\n\t\tif (!comboBoxes.length)\r\n\t\t\treturn null;\r\n\t\tcomboBoxes = Array.from(comboBoxes);\r\n\r\n\t\tconst servicesBox = comboBoxes[0];\r\n\t\tif (!servicesBox)\r\n\t\t\tthrow new LifeError(`サービス種類コンボボックスの参照に失敗：`, this.doc);\r\n\r\n\t\tconst usersBox = comboBoxes[1];\r\n\t\tif (!usersBox)\r\n\t\t\tthrow new LifeError(`ユーザーIDコンボボックスの参照に失敗`, this.doc);\r\n\r\n\t\tcomboBoxes = {\r\n\t\t\tservices: new LifeComboBox(servicesBox, \"services\"),\r\n\t\t\tusers: new LifeComboBox(usersBox, \"users\")\r\n\t\t};\r\n\t\tthis.#comboBoxes = comboBoxes;\r\n\t\treturn comboBoxes;\r\n\t}\r\n\r\n\t/**\r\n\t * フィードバックページのタイトル\r\n\t * ロード未完了時やフィードバックページ以外はundefined\r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget title() {\r\n\t\tconst el = this.doc.querySelector('.tabZone-title');\r\n\t\treturn el?.innerText.split('利用者')[0].trim(); // 'フィードバック名\\s?利用者フィードバック'\r\n\t}\r\n\t/**\r\n\t * 事業所番号\r\n\t * @return {string|undefined}\r\n\t */\r\n\tget careFacilityId() {\r\n\t\tconst tableau = this.ownerDocument.querySelector('tableau-viz');\r\n\t\treturn tableau?.querySelector('viz-parameter[name=\"自事業所番号\"]')?.getAttribute('value');\r\n\t}\r\n\t/**\r\n\t * 現在選択されているサービス種類のコード\r\n\t * 未選択時: null\r\n\t * @returns {string|null}\r\n\t */\r\n\tget currentService() {\r\n\t\tconst span = this.comboBoxes.services.currentItem;\r\n\t\tconst foundKey = Object.keys(SERVICE_N_LABEL)\r\n\t\t\t.find(key => span.innerText.startsWith(SERVICE_N_LABEL[key]))\r\n\t\treturn foundKey ? foundKey : null;\r\n\t}\r\n\t/**\r\n\t * 現在選択されているユーザーID\r\n\t * 未選択時: null\r\n\t * @retruns {LifeUserId|null}\r\n\t */\r\n\tget currentUserId() {\r\n\t\tconst span = this.comboBoxes.users.currentItem;\r\n\t\tconst text = span.innerText;\r\n\t\ttry {\r\n\t\t\treturn new LifeUserId(text);\r\n\t\t} catch (err) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 選択肢として選択可能なサービス\r\n\t * {サービスコード: サービス名, ..}\r\n\t * @returns {Object}\r\n\t */\r\n\tget availableServices() {\r\n\t\treturn this.services(this.title);\r\n\t}\r\n\t/**\r\n\t * 指定したフィードバックが利用可能なサービス一覧を取得する\r\n\t * {サービスコード: サービス名, ..}\r\n\t * @param {string} feedBackName - フィードバック名（\"科学的介護推進体制加算\"、etc.）\r\n\t * @return {object} - {service_code: service_label, ..}\r\n\t */\r\n\tservices(feedBackName = '') {\r\n\t\tif (!feedBackName) return SERVICE_N_LABEL;\r\n\r\n\t\tconst code_list = FEEDBACK_N_SERVICE[feedBackName];\r\n\t\treturn Object.fromEntries(\r\n\t\t\tObject.entries(SERVICE_N_LABEL).filter(([key]) => code_list.includes(key))\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * サービス種類の選択をエミュレートする\r\n\t * @param {string} serviceCode \r\n\t * @returns {Promise<boolean>} - 選択の成否\r\n\t */\r\n\tasync selectService(serviceCode) {\r\n\t\t// 既にサービスが選択されていれば何もしない\r\n\t\tif (this.currentService === serviceCode)\r\n\t\t\treturn true;\r\n\r\n\t\tlet a; // クリックしたいターゲット要素\r\n\r\n\t\t// 既にドロップダウンしている場合（=> 稀だろう）\r\n\t\tconst serviceName = SERVICE_N_LABEL[serviceCode];\r\n\t\ta = this.doc.querySelector('a[title^=\"${serviceName}\"]');\r\n\t\tif (a) {\r\n\t\t\ta.click();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// ドロップダウンしていなければアイテム達をロード\r\n\t\tconst nl = await this.comboBoxes.services.loadItems();\r\n\t\tfor (a of nl) {\r\n\t\t\tif (a.textContent.trim().startsWith(serviceName)) {\r\n\t\t\t\ta.click();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// サービスがドロップダウンに存在しなかったので、コンボボックスを畳む\r\n\t\tthis.comboBoxes.services.collapseItems();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * 利用者（表示上はID）の選択をエミュレートする\r\n\t * @param {LifeUserId} userId - ユーザーID\r\n\t * @returns {Promise<boolean>} - 選択の成否\r\n\t */\r\n\tasync selectUser(userId) {\r\n\t\t// 既に利用者IDが選択されていれば何もしない\r\n\t\tif (this.currentUserId?.equals(userId)) return true;\r\n\r\n\t\t// IDに該当するサービスが選択されていなければ、選択しておく\r\n\t\tconst serviceCode = userId.serviceCode;\r\n\t\tif (this.currentService !== serviceCode)\r\n\t\t\tawait this.selectService(serviceCode);\r\n\r\n\t\tlet a; // クリックしたいターゲット要素\r\n\r\n\t\t//既にドロップダウンしている場合（=> 稀だろう）\r\n\t\ta = this.doc.querySelector('a[title=\"${userId}\"]');\r\n\t\tif (a) {\r\n\t\t\ta.click();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// ドロップダウンしていなければアイテム達をロード\r\n\t\tconst nl = await this.comboBoxes.users.loadItems();\r\n\t\tfor (a of nl) {\r\n\t\t\tif (a.textContent.trim() == userId) {\r\n\t\t\t\tconsole.assert(a.textContent.trim() === userId.toString(), \"==演算子でのuserIdの比較が失敗してるかも\");\r\n\t\t\t\ta.click();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// ユーザーIDがドロップダウンに存在しなかったので、コンボボックスを畳む\r\n\t\tthis.comboBoxes.users.collapseItems();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * #shadow-root以下のスタイルを微調整（cf.ユーザーテーブルのスタイル調整はLifeUserTableの責務）\r\n\t * @returns {HTMLStyleElement} - 挿入した（あるいは既存の）style要素\r\n\t */\r\n\tadjustStyle() {\r\n\t\tconst doc = this.doc;\r\n\t\tlet style = doc.getElementById(\"this.#STYLE_ELEMENT_ID\")\r\n\t\tif (style)\r\n\t\t\treturn style;\r\n\t\tconst CSS_SNIPPET = `\r\n#dashboard-spacer{ /* iframe内部のレイアウト用div */\r\n  margin: 0 !important;\r\n}`;\r\n\t\tstyle = doc.createElement('style');\r\n\t\tstyle.id = this.#STYLE_ELEMENT_ID;\r\n\t\tstyle.textContent = CSS_SNIPPET;\r\n\t\tdoc.documentElement.appendChild(style);\r\n\t\treturn style;\r\n\t}\r\n\r\n\t/**\r\n\t * コンテンツのページ遷移を監視する\r\n\t * @param {Function} callback - ページ遷移時に実行するコールバック\r\n\t * @param {number} intervalMs - ポーリング間隔（ミリ秒）\r\n\t * @returns {number} - 解除に必要なID（clearIntervalで使用）\r\n\t */\r\n\tobserveSrc(callback, intervalMs = 500) {\r\n\t\t// 監視の重複を排除\r\n\t\tthis.disconnect();\r\n\r\n\t\t//iframe.contentWindow.location.hrefの変化を監視\r\n\t\tconst iframe = this.ownerDocument.querySelector('tableau-viz')\r\n\t\t\t?.shadowRoot\r\n\t\t\t?.querySelector('iframe');\r\n\t\tif (!iframe) {\r\n\t\t\tthrow new LifeError(`iframeを参照できません`, this.ownerDocument);\r\n\t\t}\r\n\r\n\t\tlet lastUrl = iframe.contentWindow.location.href;\r\n\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tlet currentUrl;\r\n\t\t\ttry {\r\n\t\t\t\tcurrentUrl = iframe.contentWindow.location.href;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tclearInterval(id);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (currentUrl !== lastUrl) {\r\n\t\t\t\tlastUrl = currentUrl; //更新\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}, intervalMs);\r\n\r\n\t\tthis.#intervalId = id;\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * このクラスで管理しているsetIntervalをクリアする\r\n\t */\r\n\tdisconnect() {\r\n\t\tconst id = this.#intervalId;\r\n\t\tif (id) {\r\n\t\t\tclearInterval(id);\r\n\t\t\tthis.#intervalId = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * フィードバックメニューに戻る\r\n\t * LIFEのfuckin'フロントエンドが吐いたボタンは下の方に消えてしまうので……\r\n\t * throws {LifeError} - 事業所番号取得失敗時 / iframe参照失敗時\r\n\t */\r\n\tgotoMenu() {\r\n\t\tconst careFacilityId = this.careFacilityId;\r\n\t\tif (!careFacilityId) {\r\n\t\t\tthrow new LifeError('事業所番号の取得に失敗しました');\r\n\t\t}\r\n\t\tconst url = `https://life-web.mhlw.go.jp/tableau/views/feedback_menu/sheet1?%3Alinktarget=_self&%3Aembed=yes&%E8%87%AA%E4%BA%8B%E6%A5%AD%E6%89%80%E7%95%AA%E5%8F%B7=${careFacilityId}&:customViews=no#1`;\r\n\r\n\t\tconst iframe = this.iframe;\r\n\t\tif (!iframe) {\r\n\t\t\tthrow new LifeError('iframeの参照に失敗しました');\r\n\t\t}\r\n\t\tiframe.src = url;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * コンボボックスを抽象化\r\n * LifeFeedBackPage#comboBoxesで使用される\r\n */\r\nclass LifeComboBox {\r\n\t/**\r\n\t * @param {HTMLSpanElement} containerDiv - LIFEのfuckin'フロントエンドが生成する謎のspan要素（コンボアイテムのコンテナ）\r\n\t * @param {string} name - コンボボックスの名前（service, user, その他）\r\n\t */\r\n\tconstructor(containerDiv, name) {\r\n\t\tthis._container = containerDiv;\r\n\t\tthis.doc = containerDiv.ownerDocument;\r\n\t\tthis.name = name;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return {HTMLSpanElement} - 現在選択されているコンボアイテム\r\n\t */\r\n\tget currentItem() {\r\n\t\treturn this._container.querySelector('span.tabComboBoxName');\r\n\t}\r\n\r\n\t/**\r\n\t * LIFEのfuckin'フロントエンドが生成するコンボアイテムのリスト\r\n\t * まだDOMに存在していなければnull\r\n\t * @returns {NodeList|null} - コンボアイテムを含むノードリスト[a, a, a, ...]。\r\n\t */\r\n\t_getComboItems() {\r\n\t\tconst nl = this.doc.querySelectorAll('a[title]');\r\n\t\tif (!nl.length) return null;\r\n\t\treturn nl;\r\n\t}\r\n\r\n\t/**\r\n\t * コンボアイテムをロードする\r\n\t * @returns {Promise<NodeList>} - [a, a, a, ..]\r\n\t */\r\n\tloadItems() { // will return NodeList [a, a, a, ...] or reject error\r\n\t\tconst callback = (resolve, reject) => {\r\n\t\t\tconst observer = new MutationObserver(mutations => {\r\n\t\t\t\tfor (const m of mutations) {\r\n\t\t\t\t\tif (m.type !== 'childList') continue;\r\n\r\n\t\t\t\t\tconst comboItems = this._getComboItems();\r\n\r\n\t\t\t\t\tif (!comboItems) continue;\r\n\r\n\t\t\t\t\tobserver.disconnect();\r\n\t\t\t\t\tresolve(comboItems);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//監視開始（body要素のlastChildあたりにコンボアイテムが出現するので、監視範囲が無駄に広くなる……）\r\n\t\t\tobserver.observe(this.doc.body, { childList: true });\r\n\t\t\ttry {\r\n\t\t\t\tthis.click(); // クリックイベントを発生させるとコンボアイテムが生成され、observerがそれを捉える\r\n\t\t\t} catch (err) {\r\n\t\t\t\tobserver.disconnect();\r\n\t\t\t\treject(new LifeError(\r\n\t\t\t\t\t`イベントの発火でエラーが生じたためDOM監視を停止しました at LifeFeedBackPage#loadItems.${this.name}`,\r\n\t\t\t\t\tthis\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t\t//タイムアウト処理\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tobserver.disconnect();\r\n\t\t\t\t// reject(new LifeError('ドロップダウン処理がタイムアウトしたためDOM監視を停止しました'));\r\n\t\t\t}, 1500);\r\n\t\t};\r\n\t\treturn new Promise(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * コンボボックスを畳む\r\n\t */\r\n\tcollapseItems() {\r\n\t\t// isTrustedでほとんどのエミュレートを封じられているので、仕方なく最初のアイテムのclickを呼んでいる\r\n\t\tconst comboItems = this._getComboItems(); // [a, a, a, ..]\r\n\t\tif (!comboItems) return;\r\n\t\tcomboItems[0].click(); // a.click();は何故かisTrustedが解除されておりエミュレート可能\r\n\t}\r\n\r\n\t/**\r\n\t * ユーザーのコンボボックス上におけるクリック動作をエミュレート\r\n\t */\r\n\tclick() {\r\n\t\t['mousedown', 'mouseup'].forEach(key => this._container.dispatchEvent(new MouseEvent(key, {\r\n\t\t\tbubbles: true,\r\n\t\t\tcancelable: true,\r\n\t\t\tview: window\r\n\t\t})));\r\n\t}\r\n}\r\n\r\nclass LifeUserId {\r\n\t/**\r\n\t * \r\n\t * @param {string} id_string - LIFE仕様のユーザーID（8桁）\r\n\t */\r\n\tconstructor(id_string) {\r\n\t\tif (/^\\d{8}$/.test(id_string.trim()) === false) {\r\n\t\t\tthrow new LifeError(\"不正なIDです。IDとして与えられた文字列: \", id_string);\r\n\t\t}\r\n\t\tthis._idString = id_string;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn this._idString;\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param {LifeUserId} userId \r\n\t * @returns {boolean} - 同一性\r\n\t */\r\n\tequals(userId) {\r\n\t\treturn this._idString === userId._idString;\r\n\t}\r\n\t/**\r\n\t * IDのうち、サービス種類コードを除いた部分\r\n\t * @returns {string}\r\n\t */\r\n\tget userCode() {\r\n\t\treturn this._idString.slice(0, 6);\r\n\t}\r\n\t/**\r\n\t * サービス種類コードを抜き出す\r\n\t * @returns {string}\r\n\t */\r\n\tget serviceCode() {\r\n\t\treturn this._idString.slice(-2);\r\n\t}\r\n}\r\n\r\nclass LifeError extends Error {\r\n\tconstructor(message, faultyObject) {\r\n\t\tsuper(message);\r\n\t\tthis.faultyObject = faultyObject;\r\n\t}\r\n}\r\n\r\n\r\nexport { LifeFeedBackPage, LifeUserId, LifeError };\r\n\r\n/* @if ENV=development */\r\nwindow.LifeFeedBackPage = LifeFeedBackPage;\r\nwindow.LifeUserId = LifeUserId;\r\nwindow.LifeError = LifeError;\r\n/* @endif */\r\n\r\n","import { LifeFeedBackPage, LifeUserId, LifeError } from './LifeFeedBackPage.js';\r\nimport toast from './ToastDiv.js';\r\n\r\n/**\r\n * FHD未満の環境では右側に隠れてしまっている利用者テーブルを左側に寄せて\r\n * 利用者選択用のGUIとして利用するためのラッパー（シングルトン）\r\n */\r\nclass LifeUserTable {\r\n\t/**\r\n\t * \r\n\t * @param {LifeFeedBackPage} lifeFeedback \r\n\t */\r\n\tconstructor(lifeFeedback) {\r\n\t\tconst table = document.querySelector('table[role=\"table\"]');\r\n\t\tif (!table) {\r\n\t\t\tthrow new LifeError('table[role=\"table\"]が見つからないため、LifeUserTableを初期化できません。');\r\n\t\t}\r\n\t\tthis._table = table;\r\n\t\tthis._filterStates = null;\r\n\t\tthis.life = lifeFeedback;\r\n\r\n\t\t// LifeFeedBackPageがiframeのsrcの変更を検知したときイベントを発行するので、そいつを捉えてViewを更新する\r\n\t\tthis.life.addEventListener('src-loaded', this._onSrcLoaded);\r\n\r\n\t\t// 各ユーザー行 > イベントリスナーを登録\r\n\t\t// 各ユーザー行 > data-id, data-name, data-servicecode　属性を付与\r\n\t\ttable.querySelectorAll('tbody > tr').forEach(tr => {\r\n\r\n\t\t\tconst id = tr.querySelector('td:first-child').innerText;\r\n\t\t\tconst name = tr.querySelector('td:last-child').innerText;\r\n\t\t\tconst serviceCode = id.slice(-2);\r\n\r\n\t\t\ttr.addEventListener('click', this._onUserRowSelect);\r\n\t\t\ttr.setAttribute('data-id', id);\r\n\t\t\ttr.setAttribute('data-name', name);\r\n\t\t});\r\n\r\n\t\tObject.defineProperty(HTMLLabelElement.prototype, \"disabled\", {\r\n\t\t\t/**\r\n\t\t\t * @return {boolean} - disabled\r\n\t\t\t */\r\n\t\t\tget() {\r\n\t\t\t\treturn this.classList.contains('disabled');\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @param {boolean} value - disabled\r\n\t\t\t */\r\n\t\t\tset(value) {\r\n\t\t\t\tthis.classList.toggle('disabled', value);\r\n\t\t\t\tArray.from(this.children).forEach(controller => {\r\n\t\t\t\t\tcontroller.disabled = value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * テーブル行を排他的に選択する\r\n\t\t * @param {boolean} select - true: 選択, false: 非選択（全解除）\r\n\t\t */\r\n\t\tHTMLTableRowElement.prototype.selectExclusively = function (select) {\r\n\t\t\tconst tbody = this.parentNode; // 誤ってthead/tfootでデータが定義されていてもOK\r\n\r\n\t\t\t// 万が一重複していたときのために、only-selectedクラスのtrを全部走査する\r\n\t\t\ttbody.querySelectorAll('tr.only-selected').forEach(row =>\r\n\t\t\t\trow.classList.remove('only-selected')\r\n\t\t\t);\r\n\t\t\tif (select)\r\n\t\t\t\tthis.classList.add('only-selected');\r\n\t\t};\r\n\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param {string} columnName - フィルター対象の列名\r\n\t * @param {RegExp} regex - フィルターに使う正規表現\r\n\t * @returns \r\n\t */\r\n\tfilter(columnName, regex) {\r\n\t\tconst self = this._table;\r\n\r\n\t\tconst rows = self.rows;\r\n\t\tif (rows.length <= 1)\r\n\t\t\treturn this;\r\n\r\n\t\tconst headerRow = rows[0];\r\n\t\tconst headers = Array.from(headerRow.cells).map(cell => cell.textContent.trim());\r\n\t\tconst columnIndex = headers.indexOf(columnName);\r\n\r\n\t\tif (columnIndex === -1)\r\n\t\t\tthrow new LifeError(`列 \"${columnName}\" が見つかりません`);\r\n\r\n\t\t// 各列のフィルター状態を記録するための Map\r\n\t\tself._filterStates = self._filterStates || new Map();\r\n\r\n\t\t// 現在の列フィルターを保存\r\n\t\tself._filterStates.set(columnName, regex);\r\n\r\n\t\tArray.from(rows).slice(1).forEach(row => {\r\n\t\t\t// すべての列フィルターを適用\r\n\t\t\tlet visible = true;\r\n\t\t\tfor (const [col, reg] of self._filterStates.entries()) {\r\n\t\t\t\tconst cellValue = row.cells[headers.indexOf(col)]?.textContent.trim() || \"\";\r\n\t\t\t\tif (!reg.test(cellValue)) {\r\n\t\t\t\t\tvisible = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trow.style.display = visible ? 'table-row' : 'none';\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * 高機能Captionに置き換える\r\n\t * 便宜上CaptionにViewコントローラーGUIを配置する\r\n\t */\r\n\treplaceCaption() {\r\n\t\tconst HTML_SNIPPET = `\r\n\t\t<style>\r\n\t\t/* ユーザーテーブルのルートdiv */\r\n\t\t.serviceUser-area{ \r\n\t\t\t/* reset */\r\n\t\t\tposition: static !important;\r\n\t\t\twidth: auto !important;\r\n\t\t\theight: auto !important;\r\n\t\t\t\r\n\t\t\tgrid-column: 1;\r\n\t\t}\r\n\t\t/* テーブルのコンテナdiv */\r\n\t\t.serviceUser-table{ \r\n\t\t\toverflow-x: auto !important;\r\n\t\t\theight: auto !important;\r\n\t\t\twidth: auto !important;\r\n\t\t}\r\n\t\t/* table header */\r\n\t\t.mat-mdc-header-row{\r\n\t\t\theight: auto !important;\r\n\t\t\tfont-size: medium !important;\r\n\t\t}\r\n\t\t\r\n\t\t/* tr */\r\n\t\tthead .mat-column-serviceUserId,  \r\n\t\tthead .mat-column-serviceUserName{\r\n\t\t\tfont-size: small !important;\r\n\t\t\twidth: auto !important;\r\n\t\t\theight: auto !important;\r\n\t\t}\r\n\t\t.mdc-data-table__row{\r\n\t\t\theight: auto !important;\r\n\t\t}\r\n\t\t.only-selected{\r\n\t\t\tbackground-color: rgb(255, 255, 172) !important;\r\n\t\t\tfont-weight: bold;\r\n\t\t}\r\n\t\t/* td, th */\r\n\t\t.mat-mdc-cell{\r\n\t\t\t/* セル共通 */\r\n\t\t\tpadding: .3em !important;\r\n\t\t\tline-height: 1.0 !important;\r\n\t\t}\r\n\t\ttbody .mat-column-serviceUserId,  \r\n\t\ttbody .mat-column-serviceUserName{\r\n\t\t\tfont-size: medium !important;\r\n\t\t\twidth: auto !important;\r\n\t\t\theight: auto !important;\r\n\t\t\ttext-align: left !important;\r\n\t\t\tcursor: default;\r\n\t\t}\r\n\t\ttbody > tr:hover{\r\n\t\t\tbackground-color: #eee;\r\n\t\t}\r\n\t\t.mat-mdc-header-cell{\r\n\t\t\theight: 20px !important;\r\n\t\t}\r\n\t\t/* 事業所番号と利用者は選択できません」を消す */\r\n\t\tapp-feedback-check .careFacility-Id,\r\n\t\tapp-feedback-check .notice{\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\t\r\n\t\t/*******************************/\r\n\t\t/* ユーザースクリプトで挿入する要素 */\r\n\t\t/*******************************/\r\n\t\tinput[name=\"username\"]{\r\n\t\t\tfont-size: medium;\r\n\t\t\tpadding: 4px 4px;\r\n\t\t\tmargin-top: 0.5em;\r\n\t\t}\r\n\t\tsmall{\r\n\t\t\tcolor: gray;\r\n\t\t}\r\n\t\tfieldset{\r\n\t\t\tbackground-color: rgba(0, 72, 179, 0.15);\r\n\t\t\tmargin: 2px;\r\n\t\t}\r\n\t\tfieldset label{\r\n\t\t\tfont-size: medium;\r\n\t\t}\r\n\t\tlegend{\r\n\t\t\tfont-size: small;\r\n\t\t}\r\n\t\tlabel{\r\n\t\t\tdisplay:block;\r\n\t\t}\r\n\t\tlabel.disabled{\r\n\t\t\topacity: 0.6;\r\n\t\t}\r\n\t\tcaption{\r\n\t\t\ttext-align:left;\r\n\t\t\tline-height:1.5;\r\n\t\t}\r\n\t\t</style>\r\n\t\t<button class=\"goto-menu\">フィードバックメニューに戻る</button>\r\n\t\t<fieldset>\r\n\t\t<legend>利用者テーブルを絞り込む</legend>\r\n\t\t<label>\r\n\t\t  <input type=\"radio\" name=\"filter\" value=\"52\">\r\n\t\t  <span>入所 <small>[ID末尾52]</small></span>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t  <input type=\"radio\" name=\"filter\" value=\"16\">\r\n\t\t  <span>通所 <small>[ID末尾16]</small></span>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t  <input type=\"radio\" name=\"filter\" value=\"66\">\r\n\t\t  <span>介護予防通所 <small>[ID末尾66]</small></span>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t  <input type=\"radio\" name=\"filter\" value=\"14\">\r\n\t\t  <span>訪問 <small>[ID末尾14]</small></span>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t  <input type=\"radio\" name=\"filter\" value=\"64\">\r\n\t\t  <span>介護予防訪問 <small>[ID末尾64]</small></span>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t  <input type=\"text\" name=\"username\" placeholder=\"名前で絞り込み\">\r\n\t\t</label>\r\n\t\t</fieldset>`;\r\n\t\tconst doc = this._table.ownerDocument;\r\n\t\tconst caption = doc.createElement('caption');\r\n\t\tcaption.insertAdjacentHTML('afterbegin', HTML_SNIPPET);\r\n\t\tthis._table.caption = caption;\r\n\r\n\t\t//各ラジオボタンをフィードバックと同期させ、イベントリスナーをセット\r\n\t\tconst available_codes = Object.keys(this.life.availableServices);\r\n\r\n\t\tcaption.querySelectorAll('input[name=\"filter\"]').forEach(async (radio) => {\r\n\t\t\t// 現在のフィードバックページで無効なradioを「ラベルごと」disabled！\r\n\t\t\tconst serviceCode = radio.value;\r\n\t\t\tconst isServiceAvailable = available_codes.includes(serviceCode);\r\n\t\t\tradio.closest('label').disabled = !isServiceAvailable;\r\n\t\t\tif (isServiceAvailable)\r\n\t\t\t\t// ラジオボタンにイベントリスナーをセット\r\n\t\t\t\tradio.addEventListener('change', this._onServiceRadioSelect);\r\n\t\t});\r\n\r\n\t\t//ユーザー名の入力欄にイベントリスナーをセット\r\n\t\tcaption.querySelector('input[name=\"username\"]').addEventListener('input', this._onInputUserName);\r\n\r\n\t\t//メニューに戻るボタンにイベントリスナーをセット\r\n\t\tcaption.querySelector('button.goto-menu').addEventListener('click', this._onClickGotoMenuButton);\r\n\t}\r\n\t/**\r\n\t * ユーザーテーブルの本体の表示および属性を初期化（フィルター解除 + 行選択解除など）\r\n\t */\r\n\trefreshBody() {\r\n\t\tconst table = this._table;\r\n\t\t//フィルター解除\r\n\t\ttable.tHead.querySelectorAll('th').forEach(td => {\r\n\t\t\tconst title = td.textContent.trim();\r\n\t\t\tthis.filter(title, /.*/);\r\n\t\t});\r\n\t\t// 行選択解除\r\n\t\tconst tr = table.tBodies[0].rows[0];\r\n\t\ttr.selectExclusively(false);\r\n\t}\r\n\t/**\r\n\t * Lifeのiframe.srcが書き換えられた時のイベントリスナー\r\n\t * @param {Event} e - targetはLifeFeedBackPageインスタンス\r\n\t */\r\n\t_onSrcLoaded = (e) => {\r\n\t\tthis.replaceCaption();\r\n\t\tthis.refreshBody();\r\n\t};\r\n\t/**\r\n\t * メニューに戻るボタンがクリックされたときのイベントリスナー\r\n\t * @param {Event} e - targetはbutton.goto-menu\r\n\t */\r\n\t_onClickGotoMenuButton = (e) => {\r\n\t\ttry {\r\n\t\t\tthis.life.gotoMenu();\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof LifeError) {\r\n\t\t\t\ttoast('メニューページのロードに失敗しました。LIFEの戻るボタンを探してください（下の方に隠れていることがあります）。', 'error');\r\n\t\t\t} else {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * ユーザー名入力欄に入力されたときのイベントリスナー\r\n\t * @param {Event} e - targetはinput[name=\"username\"]\r\n\t */\r\n\t_onInputUserName = (e) => {\r\n\t\t//利用者表を氏名でフィルター\r\n\t\tthis.filter('利用者氏名', new RegExp(`^${e.target.value}`));\r\n\t};\r\n\t/**\r\n\t * サービス種類のラジオボタンが選択されたときのイベントリスナー\r\n\t * @param {Event} e - input[type=\"radio\"] が選択された際のイベント\r\n\t */\r\n\t_onServiceRadioSelect = async (e) => {\r\n\t\tconst radio = e.currentTarget;\r\n\t\tif (!radio.checked)\r\n\t\t\treturn;\r\n\t\tconst serviceCode = radio.value;\r\n\t\tif (!serviceCode)\r\n\t\t\treturn;\r\n\t\t//利用者表をサービス種類でフィルター\r\n\t\tthis.filter('利用者ID', new RegExp(serviceCode + '$'));\r\n\r\n\t\t//サービス種類のセレクトボックスを選択しておく\r\n\t\ttry {\r\n\t\t\tawait this.life.selectService(serviceCode);\r\n\t\t} catch (err) {\r\n\t\t\ttoast(`${this.life.title}では、${this.life.services[serviceCode]} を選択できません`, 'warning');\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * テーブルのユーザー行がクリックされたときのイベントリスナー\r\n\t * @param {Event} e - Table Rowがクリックされた際のイベント\r\n\t */\r\n\t_onUserRowSelect = async (e) => {\r\n\t\tconst tr = e.currentTarget;\r\n\t\tconst life = this.life;\r\n\t\tconst userid = new LifeUserId(tr.dataset.id);\r\n\t\tconst username = tr.dataset.name;\r\n\t\tconst serviceCode = userid.serviceCode;\r\n\r\n\t\t//サービス種類を選択\r\n\t\tconst currentService = life.currentService;\r\n\t\tif (currentService === null) {\r\n\t\t\ttoast('利用者を選択する前に、利用者テーブルをサービス種類で絞り込んでください。', 'warning');\r\n\t\t\treturn;\r\n\t\t} else if (currentService !== serviceCode) {\r\n\t\t\ttoast('現在選択されているサービスと、利用者のサービスが一致しません。', 'error');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// life.selectUserが成功したら行を選択状態にする\r\n\t\t\tconst userSelected = await life.selectUser(userid);\r\n\t\t\tif (userSelected) {\r\n\t\t\t\ttr.selectExclusively(true); // 自分だけ選択状態にする\r\n\t\t\t\ttoast(`${username}様の選択が完了しました`, 'success');\r\n\t\t\t} else {\r\n\t\t\t\t// ユーザーが見つからなかった\r\n\t\t\t\ttr.selectExclusively(false); // 自分含めすべての行を非選択状態にする\r\n\t\t\t\ttoast(`${username}様のデータは見つかりませんでした`);\r\n\t\t\t}\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"ユーザー行のクリックでサービスは選択されましたが、ドロップダウンの選択に失敗しました\", err);\r\n\t\t\ttoast(`${userid}の選択に失敗しました`, 'warning');\r\n\t\t}\r\n\t};\r\n\r\n}\r\n\r\n\r\n\r\nexport default LifeUserTable;\r\n\r\n/* @if ENV=development */\r\nif (!window.toast) {\r\n\twindow.toast = (message) => {\r\n\t\talert(message);\r\n\t}\r\n}\r\nwindow.LifeUserTable = LifeUserTable;\r\n/* @endif */\r\n","// alertの代替として使えるtoast関数を提供する\r\n/**\r\n * @param {string} message - ポップアップするメッセージ\r\n * @param {'error'|'warning'|'success'} type - それぞれエラー、警告、成功を示唆する表示上のフレーバーを提供する\r\n * @param {number} duration - 消えるまでの時間（ミリ秒）\r\n */\r\nfunction toast(message, type = 'default', duration = 1500) {\r\n    getToastDiv().addToast(message, type, duration);\r\n};\r\n\r\nconst DURATION_DEFAULT = 2000;\r\n\r\n/**\r\n * 初期化され、DOMに接続されたToastDivインスタンスを確実に得る\r\n * @returns {ToastDiv}\r\n */\r\nconst getToastDiv = () => {\r\n    if (!toastDiv_) {\r\n        toastDiv_ = new ToastDiv();\r\n    }\r\n    if (!toastDiv_.isConnected) {\r\n        toastDiv_.connect(document.body);\r\n    }\r\n    return toastDiv_;\r\n};\r\n\r\n\r\nlet toastDiv_ = null;\r\n\r\n// カスタム要素の定義\r\nclass ToastDiv extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n\r\n        // シャドウDOMを作成してスタイルを隔離\r\n        const shadow = this.attachShadow({ mode: 'open' });\r\n\r\n        // スタイルを定義\r\n        const style = document.createElement('style');\r\n        style.textContent = `\r\n                    :host {\r\n                        position: fixed;\r\n                        top: 40%;\r\n                        left: 40%;\r\n                        transform: translate(-50%, -50%);\r\n                        z-index: 10000;\r\n                        pointer-events: none;\r\n                    }\r\n        \r\n                    .toast {\r\n                        background: rgba(0, 0, 0, 0.9);\r\n                        color: white;\r\n                        padding: .5em 1em;\r\n                        border-radius: 16px;\r\n                        margin-bottom: 15px;\r\n                        max-width: 300px;\r\n                        word-wrap: break-word;\r\n                        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);\r\n                        transform: scale(0.3);\r\n                        opacity: 0;\r\n                        transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n                        pointer-events: auto;\r\n                        backdrop-filter: blur(15px);\r\n                        border: 2px solid rgba(255, 255, 255, 0.2);\r\n                    }\r\n                    \r\n                    .toast.show {\r\n                        transform: scale(1);\r\n                        opacity: 1;\r\n                    }\r\n                    \r\n                    .toast.hide {\r\n                        transform: scale(0.8);\r\n                        opacity: 0;\r\n                    }\r\n                    \r\n                    .toast.error {\r\n                        background: rgba(239, 68, 68, 0.9);\r\n                        border-color: rgba(255, 255, 255, 0.2);\r\n                    }\r\n                    \r\n                    .toast.success {\r\n                        background: rgba(34, 197, 94, 0.9);\r\n                        border-color: rgba(255, 255, 255, 0.2);\r\n                    }\r\n                    \r\n                    .toast.warning {\r\n                        background: rgba(245, 158, 11, 0.9);\r\n                        border-color: rgba(255, 255, 255, 0.2);\r\n                    }\r\n                    \r\n                    .toast-message {\r\n                        font-size: 18px;\r\n                        line-height: 1.2;\r\n                        margin: 0;\r\n                    }\r\n                `;\r\n\r\n        shadow.appendChild(style);\r\n\r\n        // コンテナを作成\r\n        this.container = document.createElement('div');\r\n        shadow.appendChild(this.container);\r\n    }\r\n\r\n    connect(domConnector) {\r\n        if (this.isConnected) return;\r\n        domConnector.appendChild(this);\r\n    }\r\n    /**\r\n     * \r\n     * @param {string} message \r\n     * @param {'error'|'success'|'warning'|'default'} [type='default'] - メッセージの種類\r\n     * @param {number} [duration=DURATION_DEFAULT] - 表示時間（ミリ秒）\r\n     */\r\n    addToast(message, type = 'default', duration = DURATION_DEFAULT) {\r\n        const toast = document.createElement('div');\r\n        toast.className = `toast ${type}`;\r\n\r\n        const messageEl = document.createElement('p');\r\n        messageEl.className = 'toast-message';\r\n        messageEl.textContent = message;\r\n        toast.appendChild(messageEl);\r\n\r\n        this.container.appendChild(toast);\r\n\r\n        // アニメーション開始\r\n        requestAnimationFrame(() => {\r\n            toast.classList.add('show');\r\n        });\r\n\r\n        // 自動削除\r\n        setTimeout(() => {\r\n            toast.classList.remove('show');\r\n            toast.classList.add('hide');\r\n\r\n            setTimeout(() => {\r\n                toast.remove();\r\n            }, 300);\r\n        }, duration);\r\n    }\r\n}\r\n\r\ncustomElements.define('toast-div', ToastDiv);\r\n\r\nexport default toast;\r\n\r\n\r\n/* @if ENV=development */\r\nwindow.toast = toast;\r\n/* @endif */\r\n"],"names":[],"version":3,"file":"main.js.map"}